[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "aiojson_log"}

[tool.setuptools.dynamic]
readme = {file = ["README.md"], content-type = "text/markdown"}

[project]
name = "aiojson-log"
version = "0.1.0"
requires-python = ">=3.10"
description = "A logger object for asynchronous, concurrent, applications that write logs to a shared json file."
authors = [
    {name = "Daniel Henderson", email = "me@danhenderson.dev"},
]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11"
]
dependencies = [
    "asyncio"
]

[project.optional-dependencies]
cli = [
    "rich",
    "click"
]
test = [
    "coverage[toml]",
    "pytest",
    "pytest-asyncio",
    "pytest-cov"
]


[tool.black]
line-length = 140
target-version = ["py310"]
skip-string-normalization = ["true"]
include = '\.pyi?$'


[tool.isort]
line_length = 120
known_first_party = "aiojson_log"
default_section = "THIRDPARTY"
forced_separate = "test_aiojson_log"


[tool.flake8]
max-line-length = 140
extend-ignore = ["E501", "F401"]


[tool.coverage.paths]
source = ["src"]


[tool.coverage.run]
branch = ["true"]
source =[
    "src",
    "tests",
]
parallel = ["true"]


[tool.coverage.report]
show_missing = ["true"]
precision = 2


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra --strict-markers --ignore=.eggs --doctest-modules --tb=long"
norecursedirs = [
    ".git",
    ".tox",
    ".env",
    "dist",
    "build",
    "migrations"
]
testpaths = [
    "aiojson_log/test"
]
